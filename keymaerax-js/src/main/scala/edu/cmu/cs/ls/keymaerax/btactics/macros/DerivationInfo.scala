/**
  * Copyright (c) Carnegie Mellon University. CONFIDENTIAL
  * See LICENSE.txt for the conditions of this license.
  */
package edu.cmu.cs.ls.keymaerax.btactics.macros

import edu.cmu.cs.ls.keymaerax.parser.ParseException

/** Auto-exported DerivationInfo map. */
object DerivationInfo {
  // copy output of running DerivationInfoPrinter.scala here
  def ofCodeName(codeName: String): DerivationInfo = codeName match {
    case "timesBranch3" => DerivationInfo("timesBranch3", List(), 1)
    case "normalizePowers1V" => DerivationInfo("normalizePowers1V", List(), 1)
    case "metricAndLt" => DerivationInfo("metricAndLt", List(), 1)
    case "pexistsV" => DerivationInfo("pexistsV", List(), 1)
    case "intervalUpTimes" => DerivationInfo("intervalUpTimes", List(), 1)
    case "explore" => DerivationInfo("explore", List(), 0)
    case "expandAllAt" => DerivationInfo("expandAllAt", List(), 1)
    case "cutL" => DerivationInfo("cutL", List(FormulaArg("C", List())), 1)
    case "Dvariable" => DerivationInfo("Dvariable", List(), 1)
    case "commaSort" => DerivationInfo("commaSort", List(), 1)
    case "assert" => DerivationInfo("assert", List(ExpressionArg("expected", List()),StringArg("msg", List())), 1)
    case "intervalUpAbs" => DerivationInfo("intervalUpAbs", List(), 1)
    case "greaterNotRefl" => DerivationInfo("greaterNotRefl", List(), 1)
    case "DCdaxiom" => DerivationInfo("DCdaxiom", List(), 1)
    case "dC" => DerivationInfo("dC", List(ListArg(FormulaArg("R", List()))), 1)
    case "DGd" => DerivationInfo("DGd", List(), 1)
    case "foldAndLessEqExistsLemma" => DerivationInfo("foldAndLessEqExistsLemma", List(), 1)
    case "metricAndLe" => DerivationInfo("metricAndLe", List(), 1)
    case "andL" => DerivationInfo("andL", List(), 1)
    case "assignbup" => DerivationInfo("assignbup", List(), 1)
    case "intervalUp1Divide" => DerivationInfo("intervalUp1Divide", List(), 1)
    case "allThenExists" => DerivationInfo("allThenExists", List(), 1)
    case "Dforall" => DerivationInfo("Dforall", List(), 1)
    case "taylorModelTransElem" => DerivationInfo("taylorModelTransElem", List(), 1)
    case "uniformRename" => DerivationInfo("uniformRename", List(VariableArg("x", List()),VariableArg("y", List())), 0)
    case "intervalCutTerms" => DerivationInfo("intervalCutTerms", List(TermArg("t", List())), 0)
    case "taylorModelCollectPrv" => DerivationInfo("taylorModelCollectPrv", List(), 1)
    case "alldy" => DerivationInfo("alldy", List(), 1)
    case "minusNeg" => DerivationInfo("minusNeg", List(), 1)
    case "varPowerLemma" => DerivationInfo("varPowerLemma", List(), 1)
    case "Dselfassignb" => DerivationInfo("Dselfassignb", List(), 1)
    case "CQrevimplyCongruence" => DerivationInfo("CQrevimplyCongruence", List(), 0)
    case "powerDivideEven" => DerivationInfo("powerDivideEven", List(), 1)
    case "DGa" => DerivationInfo("DGa", List(), 1)
    case "prepareQE" => DerivationInfo("prepareQE", List(ListArg(VariableArg("order", List()))), 0)
    case "existsey" => DerivationInfo("existsey", List(), 1)
    case "orCommute" => DerivationInfo("orCommute", List(), 1)
    case "fail" => DerivationInfo("fail", List(), 0)
    case "timesDivInverse" => DerivationInfo("timesDivInverse", List(), 1)
    case "DW" => DerivationInfo("DW", List(), 1)
    case "discreteGhost" => DerivationInfo("discreteGhost", List(TermArg("e", List()),OptionArg(VariableArg("x", List("x")))), 1)
    case "taylorModelPartitionPrv1" => DerivationInfo("taylorModelPartitionPrv1", List(), 1)
    case "iterated" => DerivationInfo("iterated", List(), 1)
    case "splitBranch2" => DerivationInfo("splitBranch2", List(), 1)
    case "timesPowersRight" => DerivationInfo("timesPowersRight", List(), 1)
    case "powerPoly" => DerivationInfo("powerPoly", List(), 1)
    case "dualIVT" => DerivationInfo("dualIVT", List(), 1)
    case "QE" => DerivationInfo("QE", List(OptionArg(StringArg("tool", List())),OptionArg(NumberArg("timeout", List()))), 0)
    case "auto" => DerivationInfo("auto", List(OptionArg(FormulaArg("keepQEFalse", List()))), 0)
    case "taylorModelSquarePrv" => DerivationInfo("taylorModelSquarePrv", List(), 1)
    case "compatCut" => DerivationInfo("compatCut", List(FormulaArg("R", List())), 1)
    case "ratFormTimes" => DerivationInfo("ratFormTimes", List(), 1)
    case "equalityBySubtraction" => DerivationInfo("equalityBySubtraction", List(), 1)
    case "oneGeZero" => DerivationInfo("oneGeZero", List(), 1)
    case "TExge" => DerivationInfo("TExge", List(), 1)
    case "attractivityCLF" => DerivationInfo("attractivityCLF", List(OptionArg(TermArg("V", List()))), 1)
    case "refineConjunction" => DerivationInfo("refineConjunction", List(), 1)
    case "notLess" => DerivationInfo("notLess", List(), 1)
    case "Dassignby" => DerivationInfo("Dassignby", List(), 1)
    case "powerDivide0" => DerivationInfo("powerDivide0", List(), 1)
    case "intervalUpMinus" => DerivationInfo("intervalUpMinus", List(), 1)
    case "taylorModelPowerEven" => DerivationInfo("taylorModelPowerEven", List(), 1)
    case "composeb" => DerivationInfo("composeb", List(), 1)
    case "fullSimplify" => DerivationInfo("fullSimplify", List(), 0)
    case "negateEmpty" => DerivationInfo("negateEmpty", List(), 1)
    case "equivExpand" => DerivationInfo("equivExpand", List(), 1)
    case "loop" => DerivationInfo("loop", List(FormulaArg("J", List())), 1)
    case "intervalDownPower" => DerivationInfo("intervalDownPower", List(), 1)
    case "intervalDown1Divide" => DerivationInfo("intervalDown1Divide", List(), 1)
    case "contraposition2Rule" => DerivationInfo("contraposition2Rule", List(), 0)
    case "allStutter" => DerivationInfo("allStutter", List(), 1)
    case "step" => DerivationInfo("step", List(), 1)
    case "vacuousDiamondAssignNondet" => DerivationInfo("vacuousDiamondAssignNondet", List(), 1)
    case "trivialRefineGeLe" => DerivationInfo("trivialRefineGeLe", List(), 1)
    case "emptySprout" => DerivationInfo("emptySprout", List(), 1)
    case "equivExpandAnd" => DerivationInfo("equivExpandAnd", List(), 1)
    case "alphaRenAllBy" => DerivationInfo("alphaRenAllBy", List(), 1)
    case "cohideR" => DerivationInfo("cohideR", List(), 1)
    case "backiteratebsuff" => DerivationInfo("backiteratebsuff", List(), 1)
    case "taylorStep" => DerivationInfo("taylorStep", List(), 1)
    case "FPrule" => DerivationInfo("FPrule", List(), 0)
    case "timesAssociative" => DerivationInfo("timesAssociative", List(), 1)
    case "minusEmpty" => DerivationInfo("minusEmpty", List(), 1)
    case "notStutter" => DerivationInfo("notStutter", List(), 1)
    case "notImply" => DerivationInfo("notImply", List(), 1)
    case "selfassignd" => DerivationInfo("selfassignd", List(), 1)
    case "UniqIff" => DerivationInfo("UniqIff", List(), 1)
    case "intervalDownMin" => DerivationInfo("intervalDownMin", List(), 1)
    case "normalizeMonomCS" => DerivationInfo("normalizeMonomCS", List(), 1)
    case "mxAutoInstantiate" => DerivationInfo("mxAutoInstantiate", List(ListArg(FormulaArg("assumptions", List()))), 0)
    case "existsOr" => DerivationInfo("existsOr", List(), 1)
    case "boxElim" => DerivationInfo("boxElim", List(), 1)
    case "Dassignbeq" => DerivationInfo("Dassignbeq", List(), 1)
    case "autoApproximate" => DerivationInfo("autoApproximate", List(NumberArg("n", List())), 1)
    case "Dneg" => DerivationInfo("Dneg", List(), 1)
    case "less" => DerivationInfo("less", List(), 1)
    case "alle" => DerivationInfo("alle", List(), 1)
    case "falseAnd" => DerivationInfo("falseAnd", List(), 1)
    case "mxSynthesize" => DerivationInfo("mxSynthesize", List(StringArg("kind", List())), 0)
    case "divGtLe" => DerivationInfo("divGtLe", List(), 1)
    case "taylorModelNegPrv" => DerivationInfo("taylorModelNegPrv", List(), 1)
    case "intervalUpPlus" => DerivationInfo("intervalUpPlus", List(), 1)
    case "pQE" => DerivationInfo("pQE", List(), 0)
    case "choiceb" => DerivationInfo("choiceb", List(), 1)
    case "notAll" => DerivationInfo("notAll", List(), 1)
    case "TExgt" => DerivationInfo("TExgt", List(), 1)
    case "powOne" => DerivationInfo("powOne", List(), 1)
    case "transformEquality" => DerivationInfo("transformEquality", List(FormulaArg("equality", List())), 1)
    case "divideNumber" => DerivationInfo("divideNumber", List(), 1)
    case "con" => DerivationInfo("con", List(VariableArg("x", List("x")),FormulaArg("J(x)", List("x"))), 1)
    case "lessNotSym" => DerivationInfo("lessNotSym", List(), 1)
    case "throughout" => DerivationInfo("throughout", List(FormulaArg("J", List())), 1)
    case "assignbequational" => DerivationInfo("assignbequational", List(), 1)
    case "zez" => DerivationInfo("zez", List(), 1)
    case "monbaxiom" => DerivationInfo("monbaxiom", List(), 0)
    case "loopStuck" => DerivationInfo("loopStuck", List(), 1)
    case "KDomD" => DerivationInfo("KDomD", List(), 1)
    case "notL" => DerivationInfo("notL", List(), 1)
    case "stabilityTimeMLF" => DerivationInfo("stabilityTimeMLF", List(ListArg(TermArg("Vp", List())),ListArg(FormulaArg("Lp", List()))), 1)
    case "andReflexive" => DerivationInfo("andReflexive", List(), 1)
    case "implyTrue" => DerivationInfo("implyTrue", List(), 1)
    case "existsAnd" => DerivationInfo("existsAnd", List(), 1)
    case "solve" => DerivationInfo("solve", List(), 1)
    case "timesBranch2" => DerivationInfo("timesBranch2", List(), 1)
    case "branch2Value" => DerivationInfo("branch2Value", List(), 1)
    case "CQ" => DerivationInfo("CQ", List(PosInExprArg("inEqPos", List())), 0)
    case "minusBranch3" => DerivationInfo("minusBranch3", List(), 1)
    case "boxOrLeft" => DerivationInfo("boxOrLeft", List(), 1)
    case "CQrule" => DerivationInfo("CQrule", List(), 0)
    case "master" => DerivationInfo("master", List(OptionArg(FormulaArg("keepQEFalse", List()))), 0)
    case "powerLemma" => DerivationInfo("powerLemma", List(), 1)
    case "CEimp" => DerivationInfo("CEimp", List(PosInExprArg("inEqPos", List())), 0)
    case "iterateiterateb" => DerivationInfo("iterateiterateb", List(), 1)
    case "MR" => DerivationInfo("MR", List(FormulaArg("Q", List())), 1)
    case "loopMerged" => DerivationInfo("loopMerged", List(), 1)
    case "intervalDownTimes" => DerivationInfo("intervalDownTimes", List(), 1)
    case "vacuousBoxAssignNondet" => DerivationInfo("vacuousBoxAssignNondet", List(), 1)
    case "expApproximate" => DerivationInfo("expApproximate", List(VariableArg("exp", List()),NumberArg("n", List())), 1)
    case "Dtimes" => DerivationInfo("Dtimes", List(), 1)
    case "equalExpand" => DerivationInfo("equalExpand", List(), 1)
    case "intervalUpMax" => DerivationInfo("intervalUpMax", List(), 1)
    case "universalClosure" => DerivationInfo("universalClosure", List(ListArg(VariableArg("order", List()))), 1)
    case "assignball" => DerivationInfo("assignball", List(), 1)
    case "autoClose" => DerivationInfo("autoClose", List(), 0)
    case "equivTrue" => DerivationInfo("equivTrue", List(), 1)
    case "branch3GrowMid" => DerivationInfo("branch3GrowMid", List(), 1)
    case "DEs" => DerivationInfo("DEs", List(), 1)
    case "constFormulaCongruence" => DerivationInfo("constFormulaCongruence", List(), 1)
    case "indrule" => DerivationInfo("indrule", List(), 0)
    case "geNormalize" => DerivationInfo("geNormalize", List(), 1)
    case "loopApproxd" => DerivationInfo("loopApproxd", List(), 1)
    case "notNotEqual" => DerivationInfo("notNotEqual", List(), 1)
    case "DCC" => DerivationInfo("DCC", List(), 1)
    case "DGdi" => DerivationInfo("DGdi", List(), 1)
    case "dGi" => DerivationInfo("dGi", List(), 1)
    case "splitWeakInequality" => DerivationInfo("splitWeakInequality", List(), 1)
    case "odeStuck" => DerivationInfo("odeStuck", List(), 1)
    case "assigndEquality" => DerivationInfo("assigndEquality", List(), 1)
    case "timesPowersLeft" => DerivationInfo("timesPowersLeft", List(), 1)
    case "DR" => DerivationInfo("DR", List(), 1)
    case "Dequal" => DerivationInfo("Dequal", List(), 1)
    case "CQimplyCongruence" => DerivationInfo("CQimplyCongruence", List(), 0)
    case "flipLessEqual" => DerivationInfo("flipLessEqual", List(), 1)
    case "assignDual2" => DerivationInfo("assignDual2", List(), 1)
    case "duald" => DerivationInfo("duald", List(), 1)
    case "dDDG" => DerivationInfo("dDDG", List(TermArg("L", List()),TermArg("M", List())), 1)
    case "DGCa" => DerivationInfo("DGCa", List(), 1)
    case "assigndAxiom" => DerivationInfo("assigndAxiom", List(), 1)
    case "positivity" => DerivationInfo("positivity", List(), 1)
    case "dBDG" => DerivationInfo("dBDG", List(TermArg("p", List())), 1)
    case "normalize" => DerivationInfo("normalize", List(), 0)
    case "leaveWithinClosed" => DerivationInfo("leaveWithinClosed", List(), 1)
    case "Dless" => DerivationInfo("Dless", List(), 1)
    case "varLemma" => DerivationInfo("varLemma", List(), 1)
    case "openInvariantClosure" => DerivationInfo("openInvariantClosure", List(), 1)
    case "RIclosedgeq" => DerivationInfo("RIclosedgeq", List(), 1)
    case "orRecursor" => DerivationInfo("orRecursor", List(), 1)
    case "allLmon" => DerivationInfo("allLmon", List(FormulaArg("q(x)", List())), 1)
    case "CMon" => DerivationInfo("CMon", List(), 1)
    case "normalizeBranch3" => DerivationInfo("normalizeBranch3", List(), 1)
    case "equalSym" => DerivationInfo("equalSym", List(), 1)
    case "odeInvC" => DerivationInfo("odeInvC", List(), 1)
    case "CTtermCongruence" => DerivationInfo("CTtermCongruence", List(), 0)
    case "US" => DerivationInfo("US", List(ListArg(SubstitutionArg("S", List()))), 0)
    case "DBXneOpen" => DerivationInfo("DBXneOpen", List(), 1)
    case "dCi" => DerivationInfo("dCi", List(), 1)
    case "Dand" => DerivationInfo("Dand", List(), 1)
    case "Iind" => DerivationInfo("Iind", List(), 1)
    case "divLtNe" => DerivationInfo("divLtNe", List(), 1)
    case "cohide" => DerivationInfo("cohide", List(), 1)
    case "timesIdentityNeg" => DerivationInfo("timesIdentityNeg", List(), 1)
    case "branch3Mid" => DerivationInfo("branch3Mid", List(), 1)
    case "allInstPrime" => DerivationInfo("allInstPrime", List(), 1)
    case "barrier" => DerivationInfo("barrier", List(), 1)
    case "print" => DerivationInfo("print", List(StringArg("msg", List())), 0)
    case "coefficientPlusPrv" => DerivationInfo("coefficientPlusPrv", List(), 1)
    case "alphaRenAll" => DerivationInfo("alphaRenAll", List(VariableArg("x", List()),VariableArg("y", List("y"))), 0)
    case "assignDual" => DerivationInfo("assignDual", List(), 1)
    case "intervalDownNeg" => DerivationInfo("intervalDownNeg", List(), 1)
    case "existsDualy" => DerivationInfo("existsDualy", List(), 1)
    case "powerEven" => DerivationInfo("powerEven", List(), 1)
    case "greaterMonotone" => DerivationInfo("greaterMonotone", List(), 1)
    case "stepAt" => DerivationInfo("stepAt", List(), 1)
    case "L2R" => DerivationInfo("L2R", List(), 2)
    case "divLtLt" => DerivationInfo("divLtLt", List(), 1)
    case "decomposeController" => DerivationInfo("decomposeController", List(), 1)
    case "branch3Left" => DerivationInfo("branch3Left", List(), 1)
    case "dV" => DerivationInfo("dV", List(OptionArg(TermArg("ε", List()))), 1)
    case "normalizePowersCV" => DerivationInfo("normalizePowersCV", List(), 1)
    case "Kd2" => DerivationInfo("Kd2", List(), 1)
    case "notEqualNotRefl" => DerivationInfo("notEqualNotRefl", List(), 1)
    case "leMaxNorm" => DerivationInfo("leMaxNorm", List(), 1)
    case "vacuousAssignb" => DerivationInfo("vacuousAssignb", List(), 1)
    case "cut" => DerivationInfo("cut", List(FormulaArg("C", List())), 0)
    case "exchangeR" => DerivationInfo("exchangeR", List(), 2)
    case "nonnegativeSquares" => DerivationInfo("nonnegativeSquares", List(), 1)
    case "notOr" => DerivationInfo("notOr", List(), 1)
    case "splitBranch3" => DerivationInfo("splitBranch3", List(), 1)
    case "taylorB" => DerivationInfo("taylorB", List(), 1)
    case "instantiatedEquivRewriting" => DerivationInfo("instantiatedEquivRewriting", List(), 2)
    case "abbrv" => DerivationInfo("abbrv", List(TermArg("e", List()),OptionArg(VariableArg("x", List("x")))), 0)
    case "boxAnd" => DerivationInfo("boxAnd", List(), 1)
    case "normalizeMonomNCS" => DerivationInfo("normalizeMonomNCS", List(), 1)
    case "monb" => DerivationInfo("monb", List(), 0)
    case "Dor" => DerivationInfo("Dor", List(), 1)
    case "normalizePowersRV" => DerivationInfo("normalizePowersRV", List(), 1)
    case "DassigndEqualityAxiom" => DerivationInfo("DassigndEqualityAxiom", List(), 1)
    case "toSingleFormula" => DerivationInfo("toSingleFormula", List(), 0)
    case "loopRule" => DerivationInfo("loopRule", List(FormulaArg("J", List())), 1)
    case "negPlus" => DerivationInfo("negPlus", List(), 1)
    case "cutR" => DerivationInfo("cutR", List(FormulaArg("C", List())), 1)
    case "Dpower" => DerivationInfo("Dpower", List(), 1)
    case "andStutter" => DerivationInfo("andStutter", List(), 1)
    case "doubleNegation" => DerivationInfo("doubleNegation", List(), 1)
    case "Dlessequal" => DerivationInfo("Dlessequal", List(), 1)
    case "vDG" => DerivationInfo("vDG", List(ExpressionArg("ghost", List())), 1)
    case "normalizeCoeff1" => DerivationInfo("normalizeCoeff1", List(), 1)
    case "label" => DerivationInfo("label", List(StringArg("s", List())), 0)
    case "assignbAllRule" => DerivationInfo("assignbAllRule", List(TermArg("e", List())), 1)
    case "cohideOnlyR" => DerivationInfo("cohideOnlyR", List(), 1)
    case "taylorModelIntervalPrv" => DerivationInfo("taylorModelIntervalPrv", List(), 1)
    case "plusEmpty" => DerivationInfo("plusEmpty", List(), 1)
    case "taylorModelEmptyIntervalPrv" => DerivationInfo("taylorModelEmptyIntervalPrv", List(), 1)
    case "ratFormAdd" => DerivationInfo("ratFormAdd", List(), 1)
    case "diffUnfold" => DerivationInfo("diffUnfold", List(TermArg("v0", List()),TermArg("t0", List())), 1)
    case "identityTimes" => DerivationInfo("identityTimes", List(), 1)
    case "DI" => DerivationInfo("DI", List(), 1)
    case "VK" => DerivationInfo("VK", List(), 1)
    case "existsPDual" => DerivationInfo("existsPDual", List(), 1)
    case "implyDistEquiv" => DerivationInfo("implyDistEquiv", List(), 1)
    case "metricOrLt" => DerivationInfo("metricOrLt", List(), 1)
    case "stabilityCLF" => DerivationInfo("stabilityCLF", List(OptionArg(TermArg("V", List()))), 1)
    case "divNeEq" => DerivationInfo("divNeEq", List(), 1)
    case "plusClosed" => DerivationInfo("plusClosed", List(), 1)
    case "closedRef" => DerivationInfo("closedRef", List(FormulaArg("R", List())), 1)
    case "branch3Right" => DerivationInfo("branch3Right", List(), 1)
    case "assigndup" => DerivationInfo("assigndup", List(), 1)
    case "assignbeqy" => DerivationInfo("assignbeqy", List(), 1)
    case "zeroPlus" => DerivationInfo("zeroPlus", List(), 1)
    case "implyR" => DerivationInfo("implyR", List(), 1)
    case "min" => DerivationInfo("min", List(), 1)
    case "andRRule" => DerivationInfo("andRRule", List(), 1)
    case "Dvar" => DerivationInfo("Dvar", List(), 1)
    case "allDistElim" => DerivationInfo("allDistElim", List(), 1)
    case "unfold" => DerivationInfo("unfold", List(), 0)
    case "commaCommute" => DerivationInfo("commaCommute", List(), 1)
    case "taylorModelIntervalLe" => DerivationInfo("taylorModelIntervalLe", List(), 1)
    case "skolem" => DerivationInfo("skolem", List(), 1)
    case "PC3" => DerivationInfo("PC3", List(), 1)
    case "intervalUpMin" => DerivationInfo("intervalUpMin", List(), 1)
    case "reassocRightConst" => DerivationInfo("reassocRightConst", List(), 1)
    case "DBXeq" => DerivationInfo("DBXeq", List(), 1)
    case "domainStuck" => DerivationInfo("domainStuck", List(), 1)
    case "loopAuto" => DerivationInfo("loopAuto", List(), 1)
    case "dIClosed" => DerivationInfo("dIClosed", List(), 1)
    case "oneGreaterZero" => DerivationInfo("oneGreaterZero", List(), 1)
    case "equivR" => DerivationInfo("equivR", List(), 1)
    case "minusZero" => DerivationInfo("minusZero", List(), 1)
    case "DvariableAxiom" => DerivationInfo("DvariableAxiom", List(), 1)
    case "mxFormatShape" => DerivationInfo("mxFormatShape", List(StringArg("shape", List())), 0)
    case "existsLi" => DerivationInfo("existsLi", List(TermArg("f", List()),OptionArg(VariableArg("x", List("x")))), 1)
    case "andTrueInv" => DerivationInfo("andTrueInv", List(), 1)
    case "skip" => DerivationInfo("skip", List(), 0)
    case "keepFactsAbout" => DerivationInfo("keepFactsAbout", List(ListArg(VariableArg("xs", List()))), 0)
    case "allDist" => DerivationInfo("allDist", List(), 1)
    case "smartHide" => DerivationInfo("smartHide", List(), 0)
    case "andAssoc" => DerivationInfo("andAssoc", List(), 1)
    case "hideR" => DerivationInfo("hideR", List(), 1)
    case "chaseAt" => DerivationInfo("chaseAt", List(), 1)
    case "allL" => DerivationInfo("allL", List(OptionArg(TermArg("θ", List("θ")))), 1)
    case "intervalCut" => DerivationInfo("intervalCut", List(), 1)
    case "andRecursor" => DerivationInfo("andRecursor", List(), 1)
    case "expandAll" => DerivationInfo("expandAll", List(), 0)
    case "negateBranch3" => DerivationInfo("negateBranch3", List(), 1)
    case "orL" => DerivationInfo("orL", List(), 1)
    case "DX" => DerivationInfo("DX", List(), 1)
    case "DBXltOpen" => DerivationInfo("DBXltOpen", List(), 1)
    case "assignb" => DerivationInfo("assignb", List(), 1)
    case "normalizeMonom0" => DerivationInfo("normalizeMonom0", List(), 1)
    case "refineTmExists" => DerivationInfo("refineTmExists", List(), 1)
    case "branch3Value2" => DerivationInfo("branch3Value2", List(), 1)
    case "minLeNorm" => DerivationInfo("minLeNorm", List(), 1)
    case "powerOdd" => DerivationInfo("powerOdd", List(), 1)
    case "normalizePowersRP" => DerivationInfo("normalizePowersRP", List(), 1)
    case "dFP" => DerivationInfo("dFP", List(), 1)
    case "distributive" => DerivationInfo("distributive", List(), 1)
    case "monallrule" => DerivationInfo("monallrule", List(), 0)
    case "PC10" => DerivationInfo("PC10", List(), 1)
    case "intervalLEBoth" => DerivationInfo("intervalLEBoth", List(), 1)
    case "coHide2" => DerivationInfo("coHide2", List(), 2)
    case "intervalDownMax" => DerivationInfo("intervalDownMax", List(), 1)
    case "Dconst" => DerivationInfo("Dconst", List(), 1)
    case "ratFormDivide" => DerivationInfo("ratFormDivide", List(), 1)
    case "diffInvariant" => DerivationInfo("diffInvariant", List(FormulaArg("R", List())), 1)
    case "taylorModelPartitionPrv2" => DerivationInfo("taylorModelPartitionPrv2", List(), 1)
    case "I" => DerivationInfo("I", List(), 1)
    case "dBarcan" => DerivationInfo("dBarcan", List(), 1)
    case "cutLR" => DerivationInfo("cutLR", List(FormulaArg("f", List())), 1)
    case "negOneTimes" => DerivationInfo("negOneTimes", List(), 1)
    case "dI" => DerivationInfo("dI", List(), 1)
    case "allPd" => DerivationInfo("allPd", List(), 1)
    case "reassocRightPlus" => DerivationInfo("reassocRightPlus", List(), 1)
    case "DGCd" => DerivationInfo("DGCd", List(), 1)
    case "boxTrueAxiom" => DerivationInfo("boxTrueAxiom", List(), 1)
    case "splitMonomial" => DerivationInfo("splitMonomial", List(), 1)
    case "betaRule" => DerivationInfo("betaRule", List(), 0)
    case "notLessEqual" => DerivationInfo("notLessEqual", List(), 1)
    case "proveComponentSystem" => DerivationInfo("proveComponentSystem", List(StringArg("System Name", List()),StringArg("C1 Base: Om & A1 -> I1", List()),StringArg("C1 Use:  Om & I1 -> G1 & P1", List()),StringArg("C1 Step: Om & I1 ->", List("mem1; ctrl1; t0=t; {t'=1","plant1}; in1; cp1;")),StringArg("C2 Base: Om & A2 -> I2", List()),StringArg("C2 Use:  Om & I2 -> G2 & P2", List()),StringArg("C2 Step: Om & I2 ->", List("mem2; ctrl2; t0=t; {t'=1","plant2}; in2; cp2;")),StringArg("Compatibility: Om & Z ->", List("xin:=xo;")),StringArg("Com Safety:", List("xin:=xo;")),StringArg("Com Liveness: <xin:=xo;>true", List())), 1)
    case "DvarAxiom" => DerivationInfo("DvarAxiom", List(), 1)
    case "boxOrRight" => DerivationInfo("boxOrRight", List(), 1)
    case "DGpp" => DerivationInfo("DGpp", List(), 1)
    case "andTrue" => DerivationInfo("andTrue", List(), 1)
    case "orDistAnd" => DerivationInfo("orDistAnd", List(), 1)
    case "equalReflexive" => DerivationInfo("equalReflexive", List(), 1)
    case "equivL" => DerivationInfo("equivL", List(), 1)
    case "divideNeg" => DerivationInfo("divideNeg", List(), 1)
    case "taylorModelIntervalGe" => DerivationInfo("taylorModelIntervalGe", List(), 1)
    case "debug" => DerivationInfo("debug", List(StringArg("msg", List())), 0)
    case "eqAddIff" => DerivationInfo("eqAddIff", List(), 1)
    case "rationalLemma" => DerivationInfo("rationalLemma", List(), 1)
    case "DassigndAxiom" => DerivationInfo("DassigndAxiom", List(), 1)
    case "notEqual2Or" => DerivationInfo("notEqual2Or", List(), 1)
    case "DassignDual2" => DerivationInfo("DassignDual2", List(), 1)
    case "dIRule" => DerivationInfo("dIRule", List(), 1)
    case "DCaxiom" => DerivationInfo("DCaxiom", List(), 1)
    case "plusZero" => DerivationInfo("plusZero", List(), 1)
    case "nil" => DerivationInfo("nil", List(), 0)
    case "boxDiamondSubstPropagation" => DerivationInfo("boxDiamondSubstPropagation", List(), 1)
    case "notR" => DerivationInfo("notR", List(), 1)
    case "domainCommute" => DerivationInfo("domainCommute", List(), 1)
    case "timeCond" => DerivationInfo("timeCond", List(), 1)
    case "divLtEq" => DerivationInfo("divLtEq", List(), 1)
    case "intervalUpNeg" => DerivationInfo("intervalUpNeg", List(), 1)
    case "metricLt" => DerivationInfo("metricLt", List(), 1)
    case "dDX" => DerivationInfo("dDX", List(), 1)
    case "expand" => DerivationInfo("expand", List(StringArg("n", List())), 0)
    case "timesPowers1Right" => DerivationInfo("timesPowers1Right", List(), 1)
    case "gEx" => DerivationInfo("gEx", List(OptionArg(FormulaArg("hint", List()))), 1)
    case "closeFalse" => DerivationInfo("closeFalse", List(), 1)
    case "normalizePowersCP" => DerivationInfo("normalizePowersCP", List(), 1)
    case "existsDistElim" => DerivationInfo("existsDistElim", List(), 1)
    case "converseImply" => DerivationInfo("converseImply", List(), 1)
    case "greaterEqual" => DerivationInfo("greaterEqual", List(), 1)
    case "trueAnd" => DerivationInfo("trueAnd", List(), 1)
    case "fp" => DerivationInfo("fp", List(FormulaArg("J", List())), 1)
    case "CErule" => DerivationInfo("CErule", List(), 0)
    case "existsGeneralize" => DerivationInfo("existsGeneralize", List(), 1)
    case "dW" => DerivationInfo("dW", List(), 1)
    case "edit" => DerivationInfo("edit", List(ExpressionArg("to", List())), 1)
    case "divLtGe" => DerivationInfo("divLtGe", List(), 1)
    case "equivLRule" => DerivationInfo("equivLRule", List(), 1)
    case "closeId" => DerivationInfo("closeId", List(), 2)
    case "Dcompose" => DerivationInfo("Dcompose", List(), 1)
    case "greaterImpliesNotEqual" => DerivationInfo("greaterImpliesNotEqual", List(), 1)
    case "expandAllDefs" => DerivationInfo("expandAllDefs", List(ListArg(SubstitutionArg("defs", List()))), 0)
    case "branch3GrowRight" => DerivationInfo("branch3GrowRight", List(), 1)
    case "dualb" => DerivationInfo("dualb", List(), 1)
    case "byUS" => DerivationInfo("byUS", List(StringArg("P", List()),OptionArg(FormulaArg("S", List()))), 0)
    case "applyEqualities" => DerivationInfo("applyEqualities", List(), 0)
    case "plusAssociative" => DerivationInfo("plusAssociative", List(), 1)
    case "unfoldExistsLemma" => DerivationInfo("unfoldExistsLemma", List(), 1)
    case "CErevimp" => DerivationInfo("CErevimp", List(PosInExprArg("inEqPos", List())), 0)
    case "implyLRule" => DerivationInfo("implyLRule", List(), 1)
    case "negTimes" => DerivationInfo("negTimes", List(), 1)
    case "commuteEquivL" => DerivationInfo("commuteEquivL", List(), 1)
    case "plusDiffRefl" => DerivationInfo("plusDiffRefl", List(), 1)
    case "loopApproxb" => DerivationInfo("loopApproxb", List(), 1)
    case "monTimesBranch3" => DerivationInfo("monTimesBranch3", List(), 1)
    case "backiteratebnecc" => DerivationInfo("backiteratebnecc", List(), 1)
    case "negNeg" => DerivationInfo("negNeg", List(), 1)
    case "existsL" => DerivationInfo("existsL", List(), 1)
    case "branch3GrowLeft" => DerivationInfo("branch3GrowLeft", List(), 1)
    case "Dassignbequalityexists" => DerivationInfo("Dassignbequalityexists", List(), 1)
    case "dbx" => DerivationInfo("dbx", List(OptionArg(TermArg("g", List()))), 1)
    case "id" => DerivationInfo("id", List(), 0)
    case "ltzImpNez" => DerivationInfo("ltzImpNez", List(), 1)
    case "closeTransitive" => DerivationInfo("closeTransitive", List(), 0)
    case "G" => DerivationInfo("G", List(), 1)
    case "postWeaken" => DerivationInfo("postWeaken", List(), 1)
    case "cohideOnlyL" => DerivationInfo("cohideOnlyL", List(), 1)
    case "DRd" => DerivationInfo("DRd", List(), 1)
    case "plusBranch2" => DerivationInfo("plusBranch2", List(), 1)
    case "refineLe1" => DerivationInfo("refineLe1", List(), 1)
    case "intervalDownAbs" => DerivationInfo("intervalDownAbs", List(), 1)
    case "intervalUpPower" => DerivationInfo("intervalUpPower", List(), 1)
    case "allStutterPrime" => DerivationInfo("allStutterPrime", List(), 1)
    case "attractivityTimeMLF" => DerivationInfo("attractivityTimeMLF", List(ListArg(TermArg("Vp", List())),ListArg(FormulaArg("Lp", List())),TermArg("rate", List())), 1)
    case "Dassignd" => DerivationInfo("Dassignd", List(), 1)
    case "chase" => DerivationInfo("chase", List(), 1)
    case "Kd" => DerivationInfo("Kd", List(), 1)
    case "DBXgtOpen" => DerivationInfo("DBXgtOpen", List(), 1)
    case "assignbexists" => DerivationInfo("assignbexists", List(), 1)
    case "exchangeL" => DerivationInfo("exchangeL", List(), 2)
    case "orAssoc" => DerivationInfo("orAssoc", List(), 1)
    case "programStuck" => DerivationInfo("programStuck", List(), 1)
    case "V" => DerivationInfo("V", List(), 1)
    case "greaterEqualRefl" => DerivationInfo("greaterEqualRefl", List(), 1)
    case "DIogreater" => DerivationInfo("DIogreater", List(), 1)
    case "DMP" => DerivationInfo("DMP", List(), 1)
    case "CQrevimp" => DerivationInfo("CQrevimp", List(PosInExprArg("inEqPos", List())), 0)
    case "cutAt" => DerivationInfo("cutAt", List(ExpressionArg("repl", List())), 1)
    case "timesPowers1Left" => DerivationInfo("timesPowers1Left", List(), 1)
    case "ratFormNeg" => DerivationInfo("ratFormNeg", List(), 1)
    case "closeF" => DerivationInfo("closeF", List(), 0)
    case "notEquiv" => DerivationInfo("notEquiv", List(), 1)
    case "dualDirectb" => DerivationInfo("dualDirectb", List(), 1)
    case "simplify" => DerivationInfo("simplify", List(), 1)
    case "metricLe" => DerivationInfo("metricLe", List(), 1)
    case "max" => DerivationInfo("max", List(), 1)
    case "boundRename" => DerivationInfo("boundRename", List(VariableArg("x", List()),VariableArg("y", List())), 1)
    case "PC2" => DerivationInfo("PC2", List(), 1)
    case "mondrule" => DerivationInfo("mondrule", List(), 0)
    case "taylorModelApproxPrv" => DerivationInfo("taylorModelApproxPrv", List(), 1)
    case "composed" => DerivationInfo("composed", List(), 1)
    case "normalizeBranch2" => DerivationInfo("normalizeBranch2", List(), 1)
    case "dR" => DerivationInfo("dR", List(FormulaArg("R", List())), 1)
    case "Dassignb" => DerivationInfo("Dassignb", List(), 1)
    case "divideRat" => DerivationInfo("divideRat", List(), 1)
    case "hide" => DerivationInfo("hide", List(), 1)
    case "equivifyR" => DerivationInfo("equivifyR", List(), 1)
    case "divGtEq" => DerivationInfo("divGtEq", List(), 1)
    case "plusTimes" => DerivationInfo("plusTimes", List(), 1)
    case "eqNormalize" => DerivationInfo("eqNormalize", List(), 1)
    case "conrule" => DerivationInfo("conrule", List(), 0)
    case "DGC" => DerivationInfo("DGC", List(), 1)
    case "cohideL" => DerivationInfo("cohideL", List(), 1)
    case "Dcomp" => DerivationInfo("Dcomp", List(), 1)
    case "lessEqual" => DerivationInfo("lessEqual", List(), 1)
    case "timesClosed" => DerivationInfo("timesClosed", List(), 1)
    case "constLemma" => DerivationInfo("constLemma", List(), 1)
    case "assignbDual" => DerivationInfo("assignbDual", List(), 1)
    case "autoMP" => DerivationInfo("autoMP", List(), 1)
    case "plusMinus" => DerivationInfo("plusMinus", List(), 1)
    case "boundRenameAt" => DerivationInfo("boundRenameAt", List(VariableArg("y", List())), 1)
    case "implyStutter" => DerivationInfo("implyStutter", List(), 1)
    case "intervalDownMinus" => DerivationInfo("intervalDownMinus", List(), 1)
    case "taylorModelIntervalGt" => DerivationInfo("taylorModelIntervalGt", List(), 1)
    case "monb2" => DerivationInfo("monb2", List(), 0)
    case "allInst" => DerivationInfo("allInst", List(), 1)
    case "lessEqualTotal" => DerivationInfo("lessEqualTotal", List(), 1)
    case "safeabstractionb" => DerivationInfo("safeabstractionb", List(), 1)
    case "timesInverse" => DerivationInfo("timesInverse", List(), 1)
    case "monTimesBranch2" => DerivationInfo("monTimesBranch2", List(), 1)
    case "greaterEqualReflexive" => DerivationInfo("greaterEqualReflexive", List(), 1)
    case "Dimply" => DerivationInfo("Dimply", List(), 1)
    case "timesPowersBoth" => DerivationInfo("timesPowersBoth", List(), 1)
    case "equal2And" => DerivationInfo("equal2And", List(), 1)
    case "powerOne" => DerivationInfo("powerOne", List(), 1)
    case "monomialTimesLemma" => DerivationInfo("monomialTimesLemma", List(), 1)
    case "powerZero" => DerivationInfo("powerZero", List(), 1)
    case "plusNeg" => DerivationInfo("plusNeg", List(), 1)
    case "alphaRen" => DerivationInfo("alphaRen", List(VariableArg("x", List()),VariableArg("y", List("y"))), 1)
    case "barcan" => DerivationInfo("barcan", List(), 1)
    case "conRule" => DerivationInfo("conRule", List(VariableArg("x", List()),FormulaArg("J", List("x"))), 1)
    case "alleprime" => DerivationInfo("alleprime", List(), 1)
    case "powZero" => DerivationInfo("powZero", List(), 1)
    case "hideFactsAbout" => DerivationInfo("hideFactsAbout", List(ListArg(VariableArg("xs", List()))), 0)
    case "lessEqualRefl" => DerivationInfo("lessEqualRefl", List(), 1)
    case "dCClosure" => DerivationInfo("dCClosure", List(), 1)
    case "dCC" => DerivationInfo("dCC", List(), 1)
    case "invtestd" => DerivationInfo("invtestd", List(), 1)
    case "smartQE" => DerivationInfo("smartQE", List(), 0)
    case "implyL" => DerivationInfo("implyL", List(), 1)
    case "zeroTimes" => DerivationInfo("zeroTimes", List(), 1)
    case "backiterateb" => DerivationInfo("backiterateb", List(), 1)
    case "DGCde" => DerivationInfo("DGCde", List(), 1)
    case "CMonCongruence" => DerivationInfo("CMonCongruence", List(PosInExprArg("inEqPos", List())), 0)
    case "divNeNe" => DerivationInfo("divNeNe", List(), 1)
    case "taylorModelExactPrv" => DerivationInfo("taylorModelExactPrv", List(), 1)
    case "minmax" => DerivationInfo("minmax", List(), 1)
    case "Cont" => DerivationInfo("Cont", List(), 1)
    case "CQimp" => DerivationInfo("CQimp", List(PosInExprArg("inEqPos", List())), 0)
    case "ODE" => DerivationInfo("ODE", List(), 1)
    case "implyWeaken" => DerivationInfo("implyWeaken", List(), 1)
    case "DGi" => DerivationInfo("DGi", List(), 1)
    case "atomAllL2R" => DerivationInfo("atomAllL2R", List(), 1)
    case "intervalDownPlus" => DerivationInfo("intervalDownPlus", List(), 1)
    case "postCut" => DerivationInfo("postCut", List(FormulaArg("C", List())), 1)
    case "DBXgt" => DerivationInfo("DBXgt", List(), 1)
    case "ratFormPower" => DerivationInfo("ratFormPower", List(), 1)
    case "ratFormMinus" => DerivationInfo("ratFormMinus", List(), 1)
    case "Kand" => DerivationInfo("Kand", List(), 1)
    case "timesZero" => DerivationInfo("timesZero", List(), 1)
    case "implyTautology" => DerivationInfo("implyTautology", List(), 1)
    case "commuteEqual" => DerivationInfo("commuteEqual", List(), 1)
    case "useAt" => DerivationInfo("useAt", List(StringArg("axiom", List()),OptionArg(StringArg("key", List()))), 1)
    case "powerDivideOdd" => DerivationInfo("powerDivideOdd", List(), 1)
    case "stabilityStateMLF" => DerivationInfo("stabilityStateMLF", List(ListArg(TermArg("Vp", List()))), 1)
    case "forallImplies" => DerivationInfo("forallImplies", List(), 1)
    case "pendingX" => DerivationInfo("pendingX", List(StringArg("tactic", List())), 0)
    case "Dquotient" => DerivationInfo("Dquotient", List(), 1)
    case "flipGreater" => DerivationInfo("flipGreater", List(), 1)
    case "DWQinitial" => DerivationInfo("DWQinitial", List(), 1)
    case "branch3Value1" => DerivationInfo("branch3Value1", List(), 1)
    case "timesEmpty" => DerivationInfo("timesEmpty", List(), 1)
    case "geNeg" => DerivationInfo("geNeg", List(), 1)
    case "CECongruence" => DerivationInfo("CECongruence", List(PosInExprArg("inEqPos", List())), 0)
    case "existsR" => DerivationInfo("existsR", List(OptionArg(TermArg("θ", List("θ")))), 1)
    case "choiced" => DerivationInfo("choiced", List(), 1)
    case "equivStutter" => DerivationInfo("equivStutter", List(), 1)
    case "loopMergeb" => DerivationInfo("loopMergeb", List(), 1)
    case "sosQE" => DerivationInfo("sosQE", List(), 0)
    case "notBox" => DerivationInfo("notBox", List(), 1)
    case "DEsysy" => DerivationInfo("DEsysy", List(), 1)
    case "implyExpand" => DerivationInfo("implyExpand", List(), 1)
    case "notGreaterEqual" => DerivationInfo("notGreaterEqual", List(), 1)
    case "diamond" => DerivationInfo("diamond", List(), 1)
    case "divGtLt" => DerivationInfo("divGtLt", List(), 1)
    case "commaCommuteD" => DerivationInfo("commaCommuteD", List(), 1)
    case "randomd" => DerivationInfo("randomd", List(), 1)
    case "Dnotequal" => DerivationInfo("Dnotequal", List(), 1)
    case "diamondd" => DerivationInfo("diamondd", List(), 1)
    case "constCongruence" => DerivationInfo("constCongruence", List(), 1)
    case "abbrvAt" => DerivationInfo("abbrvAt", List(TermArg("e", List()),OptionArg(VariableArg("x", List()))), 1)
    case "branch2GrowRight" => DerivationInfo("branch2GrowRight", List(), 1)
    case "DC" => DerivationInfo("DC", List(FormulaArg("R", List())), 1)
    case "diamondOr" => DerivationInfo("diamondOr", List(), 1)
    case "implySelf" => DerivationInfo("implySelf", List(), 1)
    case "allSubstitute" => DerivationInfo("allSubstitute", List(), 1)
    case "timesIdentity" => DerivationInfo("timesIdentity", List(), 1)
    case "diffUnfoldD" => DerivationInfo("diffUnfoldD", List(TermArg("t0", List())), 1)
    case "idWith" => DerivationInfo("idWith", List(), 1)
    case "splitCoefficient" => DerivationInfo("splitCoefficient", List(), 1)
    case "DWdQinitial" => DerivationInfo("DWdQinitial", List(), 1)
    case "testb" => DerivationInfo("testb", List(), 1)
    case "divGtNe" => DerivationInfo("divGtNe", List(), 1)
    case "normalizePowersC1" => DerivationInfo("normalizePowersC1", List(), 1)
    case "pVd" => DerivationInfo("pVd", List(), 1)
    case "Uniq" => DerivationInfo("Uniq", List(), 1)
    case "dIClose" => DerivationInfo("dIClose", List(), 1)
    case "implyDistAnd" => DerivationInfo("implyDistAnd", List(), 1)
    case "intervalLBoth" => DerivationInfo("intervalLBoth", List(), 1)
    case "DWeakenAnd" => DerivationInfo("DWeakenAnd", List(), 1)
    case "iterateiterated" => DerivationInfo("iterateiterated", List(), 1)
    case "normalizePowers1R" => DerivationInfo("normalizePowers1R", List(), 1)
    case "plusInverse" => DerivationInfo("plusInverse", List(), 1)
    case "DWd" => DerivationInfo("DWd", List(), 1)
    case "done" => DerivationInfo("done", List(OptionArg(StringArg("msg", List())),OptionArg(StringArg("lemmaName", List()))), 0)
    case "negateBranch2" => DerivationInfo("negateBranch2", List(), 1)
    case "notGreater" => DerivationInfo("notGreater", List(), 1)
    case "solveEnd" => DerivationInfo("solveEnd", List(), 1)
    case "CEimplyCongruence" => DerivationInfo("CEimplyCongruence", List(), 0)
    case "useSolver" => DerivationInfo("useSolver", List(StringArg("tool", List())), 0)
    case "andImplies" => DerivationInfo("andImplies", List(), 1)
    case "commaCommuted" => DerivationInfo("commaCommuted", List(), 1)
    case "idx" => DerivationInfo("idx", List(), 0)
    case "flipLess" => DerivationInfo("flipLess", List(), 1)
    case "Dexists" => DerivationInfo("Dexists", List(), 1)
    case "existsRmon" => DerivationInfo("existsRmon", List(FormulaArg("q(x)", List())), 1)
    case "zeroDivNez" => DerivationInfo("zeroDivNez", List(), 1)
    case "andR" => DerivationInfo("andR", List(), 1)
    case "Dlinear" => DerivationInfo("Dlinear", List(), 1)
    case "intervalArithmetic" => DerivationInfo("intervalArithmetic", List(), 0)
    case "taylorModelDivideExactPrv" => DerivationInfo("taylorModelDivideExactPrv", List(), 1)
    case "minGeNorm" => DerivationInfo("minGeNorm", List(), 1)
    case "absExp" => DerivationInfo("absExp", List(), 1)
    case "taylorModelPowerOdd" => DerivationInfo("taylorModelPowerOdd", List(), 1)
    case "assignEquality" => DerivationInfo("assignEquality", List(), 1)
    case "prop" => DerivationInfo("prop", List(), 0)
    case "nilpotentSolve" => DerivationInfo("nilpotentSolve", List(), 1)
    case "dualDirectd" => DerivationInfo("dualDirectd", List(), 1)
    case "reassocLeft0RightConst" => DerivationInfo("reassocLeft0RightConst", List(), 1)
    case "odeUnify" => DerivationInfo("odeUnify", List(), 1)
    case "divLtLe" => DerivationInfo("divLtLe", List(), 1)
    case "commuteEquivR" => DerivationInfo("commuteEquivR", List(), 1)
    case "testdcombine" => DerivationInfo("testdcombine", List(), 1)
    case "box" => DerivationInfo("box", List(), 1)
    case "Dplus" => DerivationInfo("Dplus", List(), 1)
    case "trivialInequality" => DerivationInfo("trivialInequality", List(), 1)
    case "dG" => DerivationInfo("dG", List(ExpressionArg("E", List("y","x","y'")),OptionArg(FormulaArg("G", List("y")))), 1)
    case "useLemmaAt" => DerivationInfo("useLemmaAt", List(StringArg("lemma", List()),OptionArg(PosInExprArg("key", List()))), 1)
    case "refineLe2" => DerivationInfo("refineLe2", List(), 1)
    case "equivReflexive" => DerivationInfo("equivReflexive", List(), 1)
    case "forallThenExists" => DerivationInfo("forallThenExists", List(), 1)
    case "todo" => DerivationInfo("todo", List(), 0)
    case "PC9" => DerivationInfo("PC9", List(), 1)
    case "absAt" => DerivationInfo("absAt", List(), 1)
    case "rightAssociate" => DerivationInfo("rightAssociate", List(), 1)
    case "timeStep" => DerivationInfo("timeStep", List(), 1)
    case "circularApproximate" => DerivationInfo("circularApproximate", List(VariableArg("sin", List("sin")),VariableArg("cos", List("cos")),NumberArg("num", List())), 1)
    case "equalCommute" => DerivationInfo("equalCommute", List(), 1)
    case "bDG" => DerivationInfo("bDG", List(ExpressionArg("ghost", List()),TermArg("p", List())), 1)
    case "existsStutterPrime" => DerivationInfo("existsStutterPrime", List(), 1)
    case "taylorModelPlusPrv" => DerivationInfo("taylorModelPlusPrv", List(), 1)
    case "neNormalize" => DerivationInfo("neNormalize", List(), 1)
    case "diffUnpackEvolDomain" => DerivationInfo("diffUnpackEvolDomain", List(), 1)
    case "alphaRule" => DerivationInfo("alphaRule", List(), 0)
    case "DWbase" => DerivationInfo("DWbase", List(), 1)
    case "conflat" => DerivationInfo("conflat", List(), 0)
    case "closeTrue" => DerivationInfo("closeTrue", List(), 1)
    case "mond" => DerivationInfo("mond", List(), 0)
    case "notAnd" => DerivationInfo("notAnd", List(), 1)
    case "plusBranch3" => DerivationInfo("plusBranch3", List(), 1)
    case "gtNeg" => DerivationInfo("gtNeg", List(), 1)
    case "flipGreaterEqual" => DerivationInfo("flipGreaterEqual", List(), 1)
    case "useLemma" => DerivationInfo("useLemma", List(StringArg("lemma", List()),OptionArg(StringArg("tactic", List()))), 0)
    case "orLRule" => DerivationInfo("orLRule", List(), 1)
    case "DGpreghost" => DerivationInfo("DGpreghost", List(), 1)
    case "normalizeCoeff0" => DerivationInfo("normalizeCoeff0", List(), 1)
    case "kDomainDiamond" => DerivationInfo("kDomainDiamond", List(FormulaArg("R", List())), 1)
    case "lessNotRefl" => DerivationInfo("lessNotRefl", List(), 1)
    case "equalRefl" => DerivationInfo("equalRefl", List(), 1)
    case "existsGeneralizey" => DerivationInfo("existsGeneralizey", List(), 1)
    case "branch2GrowLeft" => DerivationInfo("branch2GrowLeft", List(), 1)
    case "CErevimplyCongruence" => DerivationInfo("CErevimplyCongruence", List(), 0)
    case "timesLeMonoLemma" => DerivationInfo("timesLeMonoLemma", List(), 1)
    case "DGCdc" => DerivationInfo("DGCdc", List(), 1)
    case "notEqual" => DerivationInfo("notEqual", List(), 1)
    case "DSdnodomain" => DerivationInfo("DSdnodomain", List(), 1)
    case "DGauto" => DerivationInfo("DGauto", List(), 1)
    case "DIequiv" => DerivationInfo("DIequiv", List(), 1)
    case "plusCommute" => DerivationInfo("plusCommute", List(), 1)
    case "leTimesMonoLemma" => DerivationInfo("leTimesMonoLemma", List(), 1)
    case "equivRewriting" => DerivationInfo("equivRewriting", List(), 2)
    case "andFalse" => DerivationInfo("andFalse", List(), 1)
    case "timesCommute" => DerivationInfo("timesCommute", List(), 1)
    case "K" => DerivationInfo("K", List(), 1)
    case "DCd" => DerivationInfo("DCd", List(FormulaArg("R", List())), 1)
    case "taylorModelIntervalLt" => DerivationInfo("taylorModelIntervalLt", List(), 1)
    case "leApprox" => DerivationInfo("leApprox", List(), 1)
    case "greater" => DerivationInfo("greater", List(), 1)
    case "metricOrLe" => DerivationInfo("metricOrLe", List(), 1)
    case "notEqualExpand" => DerivationInfo("notEqualExpand", List(), 1)
    case "allRi" => DerivationInfo("allRi", List(TermArg("f", List()),OptionArg(VariableArg("x", List("x")))), 1)
    case "notDiamond" => DerivationInfo("notDiamond", List(), 1)
    case "boxDiamondPropagation" => DerivationInfo("boxDiamondPropagation", List(), 1)
    case "boxImpliesAnd" => DerivationInfo("boxImpliesAnd", List(), 1)
    case "divGtGt" => DerivationInfo("divGtGt", List(), 1)
    case "assignbeq" => DerivationInfo("assignbeq", List(), 1)
    case "abs" => DerivationInfo("abs", List(), 1)
    case "close" => DerivationInfo("close", List(), 0)
    case "existsV" => DerivationInfo("existsV", List(), 1)
    case "splitEmpty" => DerivationInfo("splitEmpty", List(), 1)
    case "DWd2" => DerivationInfo("DWd2", List(), 1)
    case "allR" => DerivationInfo("allR", List(), 1)
    case "Dgreater" => DerivationInfo("Dgreater", List(), 1)
    case "testd" => DerivationInfo("testd", List(), 1)
    case "boxTrue" => DerivationInfo("boxTrue", List(), 1)
    case "vacuousAssignd" => DerivationInfo("vacuousAssignd", List(), 1)
    case "assignd" => DerivationInfo("assignd", List(), 1)
    case "GV" => DerivationInfo("GV", List(), 1)
    case "dRI" => DerivationInfo("dRI", List(), 1)
    case "existsStutter" => DerivationInfo("existsStutter", List(), 1)
    case "dDR" => DerivationInfo("dDR", List(FormulaArg("R", List())), 1)
    case "orR" => DerivationInfo("orR", List(), 1)
    case "taylorModelPowerOne" => DerivationInfo("taylorModelPowerOne", List(), 1)
    case "reassocRight0" => DerivationInfo("reassocRight0", List(), 1)
    case "iterateb" => DerivationInfo("iterateb", List(), 1)
    case "FPruleduplicate" => DerivationInfo("FPruleduplicate", List(), 0)
    case "transform" => DerivationInfo("transform", List(ExpressionArg("Q", List())), 1)
    case "coefficientBigDecimalPrv" => DerivationInfo("coefficientBigDecimalPrv", List(), 1)
    case "attractivityStateMLF" => DerivationInfo("attractivityStateMLF", List(ListArg(TermArg("Vp", List()))), 1)
    case "PC1" => DerivationInfo("PC1", List(), 1)
    case "orStutter" => DerivationInfo("orStutter", List(), 1)
    case "greaterNotSym" => DerivationInfo("greaterNotSym", List(), 1)
    case "Dgreaterequal" => DerivationInfo("Dgreaterequal", List(), 1)
    case "IIinduction" => DerivationInfo("IIinduction", List(), 1)
    case "DvariableCommutedAxiom" => DerivationInfo("DvariableCommutedAxiom", List(), 1)
    case "hideL" => DerivationInfo("hideL", List(), 1)
    case "notEqualSym" => DerivationInfo("notEqualSym", List(), 1)
    case "allLkeep" => DerivationInfo("allLkeep", List(TermArg("θ", List("θ"))), 1)
    case "randomb" => DerivationInfo("randomb", List(), 1)
    case "pending" => DerivationInfo("pending", List(StringArg("tactic", List())), 0)
    case "powNegOne" => DerivationInfo("powNegOne", List(), 1)
    case "dgVdbxAuto" => DerivationInfo("dgVdbxAuto", List(), 1)
    case "allV" => DerivationInfo("allV", List(), 1)
    case "trueImply" => DerivationInfo("trueImply", List(), 1)
    case "branch2Left" => DerivationInfo("branch2Left", List(), 1)
    case "propAuto" => DerivationInfo("propAuto", List(), 0)
    case "stutter" => DerivationInfo("stutter", List(VariableArg("x", List())), 1)
    case "notExists" => DerivationInfo("notExists", List(), 1)
    case "gtzImpNez" => DerivationInfo("gtzImpNez", List(), 1)
    case "zeroMinus" => DerivationInfo("zeroMinus", List(), 1)
    case "minmaxAt" => DerivationInfo("minmaxAt", List(), 1)
    case "IVT" => DerivationInfo("IVT", List(), 1)
    case "trivialRefineLtGt" => DerivationInfo("trivialRefineLtGt", List(), 1)
    case "coefficientNegPrv" => DerivationInfo("coefficientNegPrv", List(), 1)
    case "andCommute" => DerivationInfo("andCommute", List(), 1)
    case "DlinearRight" => DerivationInfo("DlinearRight", List(), 1)
    case "taylorModelTimesPrv" => DerivationInfo("taylorModelTimesPrv", List(), 1)
    case "assigndEqualityAxiom" => DerivationInfo("assigndEqualityAxiom", List(), 1)
    case "taylorModelMinusPrv" => DerivationInfo("taylorModelMinusPrv", List(), 1)
    case "monall" => DerivationInfo("monall", List(), 0)
    case "divLtGt" => DerivationInfo("divLtGt", List(), 1)
    case "DBXle" => DerivationInfo("DBXle", List(), 1)
    case "implyRi" => DerivationInfo("implyRi", List(), 2)
    case "existsDual" => DerivationInfo("existsDual", List(), 1)
    case "dGold" => DerivationInfo("dGold", List(VariableArg("y", List("y")),TermArg("a(x)", List()),TermArg("b(x)", List()),OptionArg(FormulaArg("P", List("y")))), 1)
    case "selfassignb" => DerivationInfo("selfassignb", List(), 1)
    case "monTimesZero" => DerivationInfo("monTimesZero", List(), 1)
    case "coefficientTimesPrv" => DerivationInfo("coefficientTimesPrv", List(), 1)
    case "divGtGe" => DerivationInfo("divGtGe", List(), 1)
    case "dWplus" => DerivationInfo("dWplus", List(), 1)
    case "minGtNorm" => DerivationInfo("minGtNorm", List(), 1)
    case "DSnodomain" => DerivationInfo("DSnodomain", List(), 1)
    case "greaterEqualTotal" => DerivationInfo("greaterEqualTotal", List(), 1)
    case "ally" => DerivationInfo("ally", List(), 1)
    case "assignbAxiom" => DerivationInfo("assignbAxiom", List(), 1)
    case "selfassignby" => DerivationInfo("selfassignby", List(), 1)
    case "allL2R" => DerivationInfo("allL2R", List(), 1)
    case "closeT" => DerivationInfo("closeT", List(), 0)
    case "DIoless" => DerivationInfo("DIoless", List(), 1)
    case "Dminus" => DerivationInfo("Dminus", List(), 1)
    case "assigndEqualityAll" => DerivationInfo("assigndEqualityAll", List(), 1)
    case "DSddomain" => DerivationInfo("DSddomain", List(), 1)
    case "Goedel" => DerivationInfo("Goedel", List(), 0)
    case "derive" => DerivationInfo("derive", List(), 1)
    case "boxd" => DerivationInfo("boxd", List(), 1)
    case "allR2L" => DerivationInfo("allR2L", List(), 1)
    case "rcf" => DerivationInfo("rcf", List(), 0)
    case "assignbExistsRule" => DerivationInfo("assignbExistsRule", List(TermArg("e", List())), 1)
    case "alldt" => DerivationInfo("alldt", List(), 1)
    case "RI" => DerivationInfo("RI", List(), 1)
    case "minusBranch2" => DerivationInfo("minusBranch2", List(), 1)
    case "DS" => DerivationInfo("DS", List(), 1)
    case "ODEinv" => DerivationInfo("ODEinv", List(OptionArg(FormulaArg("tryHard", List())),OptionArg(FormulaArg("useDw", List()))), 1)
    case "propClose" => DerivationInfo("propClose", List(), 0)
    case "DBXge" => DerivationInfo("DBXge", List(), 1)
    case "partition2" => DerivationInfo("partition2", List(), 1)
    case "taylorModelEvalPrv" => DerivationInfo("taylorModelEvalPrv", List(), 1)
    case "equivRRule" => DerivationInfo("equivRRule", List(), 1)
    case "gtNormalize" => DerivationInfo("gtNormalize", List(), 1)
    case "alld" => DerivationInfo("alld", List(), 1)
    case "cexODE" => DerivationInfo("cexODE", List(), 1)
    case "divideIdentity" => DerivationInfo("divideIdentity", List(), 1)
    case "deepChase" => DerivationInfo("deepChase", List(), 1)
    case "DE" => DerivationInfo("DE", List(), 1)
    case "branch2Right" => DerivationInfo("branch2Right", List(), 1)
    case "assignbequalityexists" => DerivationInfo("assignbequalityexists", List(), 1)
    case "existse" => DerivationInfo("existse", List(), 1)
    case "allGeneralize" => DerivationInfo("allGeneralize", List(), 0)
    case t => throw ParseException("Unknown tactic " + t)  }
}

/** Derivation info container. */
case class DerivationInfo(name: String, persistentInputs: List[ArgInfo], numPositionArgs: Int) {

}