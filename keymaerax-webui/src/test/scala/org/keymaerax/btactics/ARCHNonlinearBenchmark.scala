/*
 * Copyright (c) Carnegie Mellon University, Karlsruhe Institute of Technology.
 * See LICENSE.txt for the conditions of this license.
 */

package org.keymaerax.btactics

import org.keymaerax.core.Formula
import org.keymaerax.parser.Parser
import org.keymaerax.tagobjects.{IgnoreInBuildTest, SlowTest}
import org.scalatest.prop.TableDrivenPropertyChecks._

/** @author Nathan Fulton */
class ARCHNonlinearBenchmark extends TacticTestBase {

  /** Generated by https://github.com/nrfulton/spaceex2keymaewrax */
  private val z3Benchmarks =
    """x=-1&y=1->[{x'=-x*y,y'=x^2+y^2&true}](!(x>0|y<=0))
      |x>-4/5&x < -1/3&y < 3/2&y>=1->[{x'=-x+x*(x^2+y^2),y'=x+y*(x^2+y^2)&true}](!(x < -1/3&y>=0&2*y < 1&x>-4/5))
      |x^3>=-1&y^5>=0->[{x'=(-3+x)^4+y^5,y'=y^2&true}](!(1+x < 0|y < 0))
      |x=5&y=3&z=-4->[{x'=y,y'=x-y-x*z,z'=x^2-z&true}](!z < -5)
      |x^3>=-1->[{x'=a+(-3+x)^4,a'=0&a>=0}](!x^3 < -1)
      |x=1&y=0->[{x'=y^2,y'=x&true}](!x < 0)
      |x=0&y=-1->[{x'=x,y'=y^2&true}](!y>0)
      |x=0&y=1->[{x'=x*(1-y),y'=-(1-x)*y&x>=0&y>=0}](!y < 0)
      |x=0&y=1/2->[{x'=-x+x^3-y+x*y^2,y'=x-y+x^2*y+y^3&x>=0&y>=0}](!x^2+y^2>1)
      |x>-1&x < 0&y < 0&y>=-1->[{x'=-1+x^2+y^2,y'=5*(-1+x*y)&true}](!x+y>1)
      |x>-1/2&x < 0&y < 0&y>=-1/2->[{x'=y,y'=2*(-1-y)*y&true}](!y>2)
      |1/100-x^2-y^2>=0->[{x'=-2*x+x^2+y,y'=x-2*y+y^2&true}](!x^2+y^2>=1/4)
      |x=1&y=-1->[{x'=x*(x+2*y),y'=y*(2*x+y)&true}](!(x < 0|y>0))
      |x^2+y^2 < 1/16->[{x'=x-x^3+y-x*y^2,y'=-x+y-x^2*y-y^3&true}](!(x<=-2|y>2))
      |x>-4/5&x < -1/3&y < 0&y>=-1->[{x'=2*x-2*x*y,y'=-x^2+2*y+y^2&true}](!(x=0&y=0|x+y>1))
      |x^2+y^2<=1/5->[{x'=-4*y+x*(1-x^2-y^2)-y*(x^2+y^2),y'=4*x+y*(1-x^2-y^2)+x*(x^2+y^2)&true}](!x^2+y^2>1)
      |x>-1/2&x < -1/3&y < 0&y>=-1/2->[{x'=x*(1-x^2-y^2)+y*((-1+x^2)^2+y^2),y'=y*(1-x^2-y^2)-y*((-1+x^2)^2+y^2)&true}](!x>=0)
      |x=1&y=1->[{x'=x*(2-x-2*y),y'=(2-2*x-y)*y&true}](!(x<=0|y<=0))
      |x=1&y=0->[{x'=y^5+x^2*(-x+y),y'=y^2*(-2*x+y)&true}](!(y>0|y < 0))
      |x=0&y=0->[{x'=-1+x^2+y^2,y'=x^2&true}](!y < 0)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=-x^6-x*y,y'=x^2-y&true}](!y<=-1)
      |x=0&y=1/2->[{x'=-x+x^3-y+x*y^2,y'=x-y+x^2*y+y^3&true}](!x^2+y^2>1)
      |x=1&y=0&z=0->[{x'=x*z,y'=y*z,z'=-x^2-y^2&x^2+y^2+z^2=1}](!(x>1|z>0))
      |0.5<=x&x<=0.7&0<=y&y<=0.3->[{x'=-x+x*y,y'=-y&true}](!(-0.8>=x&x>=-1&-0.7>=y&y>=-1))
      |x=-1&y=-1->[{x'=x*(x-2*y),y'=-(2*x-y)*y&true}](!(x>0|y>0))
      |x=-1&y=1->[{x'=x^2,y'=(2*x-y)*y&true}](!(x>0|y<=0))
      |""".stripMargin.split("\n").toList.filter(_.nonEmpty).map(Parser.parser.formulaParser)

  private val mathematicaBenchmarks = z3Benchmarks ++
    """x^2+y^2 < 1/16->[{x'=x-x^3+y-x*y^2,y'=-x+y-x^2*y-y^3&true}](!(x < -1|y < -1|x>1|y>1))
      |x^2+y^2>=1->[{x'=x-y^3,y'=x^3+y&true}](!x^2+y^2 < 1/2)
      |x=1&y=1/8->[{x'=x-y^2,y'=y*(x-y^2)&true}](!x < 0)
      |x=1/2&y=1/2->[{x'=-x+x^3-y+x*y^2,y'=x-y+x^2*y+y^3&true}](!x^2+y^2>2)
      |x>-1/2&x < -1/3&y < 0&y>=-1/2->[{x'=2*x-x^5-x*y^4,y'=y-x^2*y-y^3&true}](!x^2+y^2>5)
      |(-3/2+x)^2+y^2<=1/4->[{x'=x,y'=-x+x^3/3-y&true}](!(1+x)^2+(1+y)^2<=4/25)
      |x^2+(-2+y)^2 < 1/24->[{x'=-x+2*x^2*y,y'=-y&true}](!(x<=-2|y<=-1))
      |(-1+x)^2+(1+y)^2 < 1/4->[{x'=x^4+2*x*y^2-6*x^2*y^2+y^4+x*(x^2-y^2),y'=2*x^2*y-4*x^3*y+4*x*y^3-y*(x^2-y^2)&true}](!y>=1)
      |x>-1/2&x < -1/3&y < 0&y>=-1/2->[{x'=x*(1-x^2-y^2)+y*((-1+x^2)^2+y^2),y'=y*(1-x^2-y^2)-y*((-1+x^2)^2+y^2)&true}](!x^2+2*y^2>2)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=-x+2*y+x^2*y+x^4*y^5,y'=-y-x^4*y^6+x^8*y^9&true}](!(x<=-1|y<=-1))
      |x^2+(-1+y)^2 < 1/8->[{x'=-2*x+y^4,y'=-y+3*x*y^3&true}](!y<=-1)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=(1-x^2)*y,y'=1-y^2&true}](!(x>=2|x<=-2))
      |x>-1&x < -1/2&y<=-1/10&y>=-3/10->[{x'=315*x^7+477*x^6*y-113*x^5*y^2+301*x^4*y^3-300*x^3*y^4-192*x^2*y^5+128*x*y^6-16*y^7,y'=y*(2619*x^6-99*x^5*y-3249*x^4*y^2+1085*x^3*y^3+596*x^2*y^4-416*x*y^5+64*y^6)&true}](!x>1+y)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=(2+x)*(-(1-x)*x+y),y'=-y&true}](!x<=-5/2)
      |(-1/3+x)^2+y^2 < 1/25->[{x'=2*x*y,y'=-x^2+y^2&true}](!x<=-2)
      |x^2+y^2 < 1/4->[{x'=-70-100*x+70*x^2+100*x^3-200*y+200*x^2*y,y'=146*x+100*y+140*x*y+100*x^2*y+200*x*y^2&true}](!(2*x>=3|x<=-3/2))
      |x^2+y^2<=1/4->[{x'=-y+2*x^2*y,y'=y+2*x*y^2&true}](!x>3)
      |x=1/4&y=1/8&z=1/10->[{x'=x^2-x*(x^3+y^3+z^3),y'=y^2-y*(x^3+y^3+z^3),z'=z^2-z*(x^3+y^3+z^3)&true}](!(x>10|y>5|z<=-20))
      |(2+x)^2+(-1+y)^2<=1/4->[{x'=x^2+2*x*y+3*y^2,y'=2*y*(2*x+y)&true}](!x>0)
      |(-1/3+x)^2+2*(-1/3+y)^2 < 1/25->[{x'=x*(2-x-y),y'=x-y&true}](!(x>=2|x<=-2))
      |""".stripMargin.split("\n").toList.filter(_.nonEmpty).map(Parser.parser.formulaParser)

  private val matlabBenchmarks =
    """
      |(-1+x)^2+(1+y)^2 < 1/4->[{x'=1+x+x^2+x^3+2*y+2*x^2*y,y'=-y+2*x*y+x^2*y+2*x*y^2&true}](!y>=1)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=y,y'=-x+y*(1-x^2-y^2)&true}](!(x^2+y^2=0|x>=2|x<=-2))
      |2*(-1/3+x)^2+y^2 < 1/16->[{x'=x^2*y,y'=x^2-y^2&true}](!x<=-2)
      |""".stripMargin.split("\n").toList.filter(_ != "").map(Parser.parser.formulaParser)

  private val todoBenchmarks =
    """-1/5000+(1/20+x)^2+(3/200+y)^2<=0->[{x'=-3*x^2/2-x^3/2-y,y'=3*x-y&true}](!49/100+x+x^2+y+y^2<=0)
      |-1/20+(5/4+x)^2+(-5/4+y)^2<=0->[{x'=7/8+x-x^3/3-y,y'=2*(7/10+x-4*y/5)/25&true}](!36/5+5*x+x^2+2*y+y^2<=0)
      |x>-1/2&x < -1/3&y < 0&y>=-1/2->[{x'=2*x-x^5-x*y^4,y'=y-x^2*y-y^3&true}](!x+y>0)
      |(1+x)^2+(-2+y)^2<=4/25->[{x'=y,y'=2*x-x^3-y-x^2*y&true}](!(-1+x)^2+y^2<=1/25)
      |x>-1&x < -1/2&y < -1/2&y>=-1->[{x'=y,y'=x^5-x*y&true}](!x+y>1)
      |-1/20+(5/4+x)^2+(-5/4+y)^2<=0->[{x'=x+y,y'=x*y-y^2/2&true}](!(5/2+x)^2+(-4/5+y)^2<=1/20)
      |x^2+(-1/2+y)^2 < 1/24->[{x'=-x+2*x^3*y^2,y'=-y&x^2*y^2 < 1}](!(x<=-2|y<=-1))
      |x+y>=0->[{x'=-2*y,y'=x^2&true}](!(x < -1&y<=-1/2))
      |x=1&y=-1->[{x'=x^2+(x+y)/2,y'=(-x+3*y)/2&true}](!y>0)
      |x>-1&x < -3/4&y<=3/2&y>=1->[{x'=-42*x^7+50*x^2*y+156*x^3*y+258*x^4*y-46*x^5*y+68*x^6*y+20*x*y^6-8*y^7,y'=y*(1110*x^6-3182*x^4*y-220*x^5*y+478*x^3*y^3+487*x^2*y^4-102*x*y^5-12*y^6)&true}](!x>1+y)
      |x^2+(2+y)^2<=1->[{x'=2*x-x*y,y'=2*x^2-y&true}](!x^2+(-1+y)^2<=9/100)
      |(-1/3+x)^2+(-1/3+y)^2 < 1/16->[{x'=-x-y+x*(x^2+2*y^2),y'=x-y+y*(x^2+2*y^2)&true}](!(x=0&y=0|x<=-2|y<=-1))
      |(2/3+x)^2+y^2<=1/24->[{x'=-2*y,y'=-2*x-3*x^2&true}](!x>0)
      |x^2+y^2<=1->[{x'=3*(-4+x^2),y'=3+x*y-y^2&true}](!(x < -4|y < -4|x>4|y>4))
      |x=0&y=1->[{x'=y,y'=-x+(1-x^2)*y&x<=0&y>=0}](!x^2+y^2>10)
      |-1<=x&x<=-0.5&1<=y&y<=1.5->[{x'=7/8+x-x^3/3-y,y'=2*(7/10+x-4*y/5)/25&true}](!(-2.5<=x&x<=-2&-2<=y&y<=-1.5))
      |""".stripMargin.split("\n").toList.filter(_ != "").map(Parser.parser.formulaParser)

  "ODE" should "prove some examples with Z3" taggedAs SlowTest in withZ3 { _ =>
    forEvery(Table("Formula", z3Benchmarks: _*)) { (fml: Formula) =>
      proveBy(fml, TactixLibrary.implyR(1) & TactixLibrary.ODE(1)) shouldBe Symbol("proved")
    }
  }

  it should "prove most examples with Mathematica" taggedAs SlowTest in withMathematica { _ =>
    forEvery(Table("Formula", mathematicaBenchmarks: _*)) { (fml: Formula) =>
      proveBy(fml, TactixLibrary.implyR(1) & TactixLibrary.ODE(1)) shouldBe Symbol("proved")
    }
  }

  it should "prove some more with Mathematica and Matlab" taggedAs IgnoreInBuildTest in withMathematicaMatlab { _ =>
    forEvery(Table("Formula", matlabBenchmarks: _*)) { (fml: Formula) =>
      proveBy(fml, TactixLibrary.implyR(1) & TactixLibrary.ODE(1)) shouldBe Symbol("proved")
    }
  }

  it should "FEATURE_REQUEST: prove remaining examples" taggedAs IgnoreInBuildTest in withMathematicaMatlab { _ =>
    forEvery(Table("Formula", todoBenchmarks: _*)) { (fml: Formula) =>
      proveBy(fml, TactixLibrary.implyR(1) & TactixLibrary.ODE(1)) shouldBe Symbol("proved")
    }
  }
}
